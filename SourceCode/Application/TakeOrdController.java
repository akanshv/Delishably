package application;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;

import java.io.IOException;

import javafx.event.ActionEvent;

import javafx.scene.control.CheckBox;
import javafx.stage.Stage;

public class TakeOrdController {
	@FXML
	private Stage stage;
	@FXML
	private Scene scene;
	@FXML
	private Parent root;
	@FXML
	private CheckBox mvd200;
	@FXML
	private CheckBox mvr100;
	@FXML
	private CheckBox mvc200;
	@FXML
	private CheckBox mvn100;
	@FXML
	private CheckBox mnbir250;
	@FXML
	private CheckBox avb100;
	@FXML
	private CheckBox avp250;
	@FXML
	private CheckBox avs175;
	@FXML
	private CheckBox avp50;
	@FXML
	private CheckBox mvp200;
	@FXML
	private CheckBox Anl200;
	@FXML
	private CheckBox anr100;
	@FXML
	private CheckBox ans300;
	@FXML
	private CheckBox ano150;
	@FXML
	private CheckBox ane200;
	@FXML
	private CheckBox mnb200;
	@FXML
	private CheckBox mnm300;
	@FXML
	private CheckBox mne250;
	@FXML
	private CheckBox mnf200;
	@FXML
	private CheckBox dg100;
	@FXML
	private CheckBox df100;
	@FXML
	private CheckBox dc250;
	@FXML
	private CheckBox df200;
	@FXML
	private CheckBox ds200;
	@FXML
	private CheckBox drc200;
	@FXML
	private CheckBox dra200;
	@FXML
	private CheckBox drj200;
	@FXML
	private CheckBox drc50;
	@FXML
	private CheckBox avm150;
	@FXML
	private Button seeorder;
	@FXML
	private Button backbtn;
	@FXML
	private CheckBox drm200;
	private int arr[]= new int[30];

	// Event Listener on Button[#seeorder].onAction
	@FXML
	public void seeorder(ActionEvent event) throws IOException {
		apply();
		FXMLLoader loader=new FXMLLoader(getClass().getResource("SeeOrder.fxml"));
		root=loader.load();
		SeeOrderController own=loader.getController();
		 stage=(Stage)((Node)event.getSource()).getScene().getWindow();
			own.func(arr);
		 scene = new Scene(root);
                  scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
		 stage.setScene(scene);
	     stage.show();	
		// TODO Autogenerated
	}
	// Event Listener on Button[#backbtn].onAction
	@FXML
	public void back(ActionEvent event) throws IOException {
		// TODO Autogenerated
		FXMLLoader loader=new FXMLLoader(getClass().getResource("employee.fxml"));
		root=loader.load();
		 stage=(Stage)((Node)event.getSource()).getScene().getWindow();
		 scene = new Scene(root);
                  scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
		 stage.setScene(scene);
	     stage.show();	
	}
	// Event Listener on Button.onAction
	
	@FXML
	public void apply() {
		// TODO Autogenerated
	    if(avm150.isSelected()){
           arr[0]=1;  
	    }
	    else {
	       arr[0]=0;
	    }
	    
	    if(avb100.isSelected()){
	    	arr[1]=1;
	    }
	    else {
	    	arr[1]=0;
	    }
	    if(avp250.isSelected()){
	    	arr[2]=1;
	    }
	    else {
		       arr[2]=0;
		}
	    if(avs175.isSelected()){
	    	arr[3]=1;
	    }
	    else {
		       arr[3]=0;
		    }
	    if(avp50.isSelected()){
	    	arr[4]=1;
	    }
	    else {
		       arr[4]=0;
		    }
	    if(Anl200.isSelected()) {
	    	arr[5]=1;
	    }
	    else {
		       arr[5]=0;
		    }
        if(anr100.isSelected()) {
        	arr[6]=1;
	    }
        else {
 	       arr[6]=0;
 	    }
        if(ans300.isSelected()) {
        	arr[7]=1;
	    }
        else {
 	       arr[7]=0;
 	    }
        if(ano150.isSelected()) {
        	arr[8]=1;
	    }
        else {
 	       arr[8]=0;
 	    }
        if(ane200.isSelected()) {
        	arr[9]=1;
	    }
        else {
 	       arr[9]=0;
 	    }
        if(mvp200.isSelected()) {
        	arr[10]=1;
	    }
        else {
 	       arr[10]=0;
 	    }
        if(mvd200.isSelected()) {
        	arr[11]=1;
	    }
        else {
 	       arr[11]=0;
 	    }
        if(mvr100.isSelected()) {
        	arr[12]=1;
	    }
        else {
 	       arr[12]=0;
 	    }
        if(mvc200.isSelected()) {
        	arr[13]=1;
	    }
        else {
 	       arr[13]=0;
 	    }
        if(mvn100.isSelected()) {
        	arr[14]=1;
	    }
        else {
 	       arr[14]=0;
 	    }
        if(mnb200.isSelected()) {
        	arr[15]=1;
	    }
        else {
 	       arr[15]=0;
 	    }
        if(mnm300.isSelected()) {
        	arr[16]=1;
	    }
        else {
 	       arr[16]=0;
 	    }
        if(mne250.isSelected()) {
        	arr[17]=1;
	    }
        else {
 	       arr[17]=0;
 	    }
        if(mnf200.isSelected()) {
        	arr[18]=1;
	    }
        else {
 	       arr[18]=0;
 	    }
        if(mnbir250.isSelected()) {
        	arr[19]=1;
	    }
        else {
 	       arr[19]=0;
 	    }
        if(dg100.isSelected()) {
        	arr[20]=1;
	    }
        else {
 	       arr[20]=0;
 	    }
        if(df100.isSelected()) {
        	arr[21]=1;
	    }
        else {
 	       arr[21]=0;
 	    }
        if(dc250.isSelected()) {
        	arr[22]=1;
	    }
        else {
 	       arr[22]=0;
 	    }
 		if(df200.isSelected()) {
 			arr[23]=1;
 		}
 		else {
 	       arr[23]=0;
 	    }
 		if(ds200.isSelected()) {
 			arr[24]=1;
 		}
 		else {
 	       arr[24]=0;
 	    }
 		if(drc200.isSelected()) {
 			arr[25]=1;
 		}
 		else {
 	       arr[25]=0;
 	    }
 		if(drm200.isSelected()) {
 			arr[26]=1;
 		}
 		else {
 	       arr[26]=0;
 	    }
 		if(dra200.isSelected()) {
 			arr[27]=1;
 		}
 		else {
 	       arr[27]=0;
 	    }
 		if(drj200.isSelected()) {
 			arr[28]=1;
 		}
 		else {
 	       arr[28]=0;
 	    }
 		if(drc50.isSelected()) {
 			arr[29]=1;
 		}
 		else {
 	       arr[29]=0;
 	    }


	}
}

